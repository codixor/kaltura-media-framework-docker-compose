# vi:syntax=nginx
user  www-data;
worker_processes  1;

error_log stderr;

events {
    worker_connections  1024;
}

# segmenter
live {
    store_s3_block dummy_bucket {
        url http://127.0.0.1:8001;
        access_key AKIAIOSFODNN7EXAMPLE;
        secret_key wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
        service s3;
        region us-east-1;
    }

    store_s3 dummy_bucket;

    persist_opaque $hostname:$live_version;
    persist_setup_path /store/channel/$channel_id/setup;
    persist_index_path /store/channel/$channel_id/index;
    persist_delta_path /store/channel/$channel_id/delta;
    persist_media_path /store/channel/$channel_id/bucket/$persist_bucket_id;

    preset main {
    }

    preset ll {
        ll_segmenter;
    }
}

# rtmp input
rtmp {
    server {
        listen 1935;

        application live {
            live on;
            deny play all;

            kmp_ctrl_connect_url ${CONTROLLER_API_URL};
            kmp_ctrl_publish_url ${CONTROLLER_API_URL};
            kmp_ctrl_unpublish_url ${CONTROLLER_API_URL};
            kmp_ctrl_republish_url ${CONTROLLER_API_URL};
        }
    }
}

# haivision srt input
srt {
    server {
        listen 7045;

        proxy_pass tcp://127.0.0.1:8002;
        proxy_header '$stream_id\n';
    }
}

stream {
    # mpeg-ts input
    server {
        listen 8002;
        resolver 127.0.0.11 ipv6=off;

        preread_str_delim '\n';

        ts;
        ts_stream_id $preread_str;

        ts_kmp on;
        ts_kmp_ctrl_connect_url ${CONTROLLER_API_URL};
        ts_kmp_ctrl_publish_url ${CONTROLLER_API_URL};
        ts_kmp_ctrl_unpublish_url ${CONTROLLER_API_URL};
        ts_kmp_ctrl_republish_url ${CONTROLLER_API_URL};
    }

    # segmenter (kmp input)
    server {
        listen 8003;
        resolver 127.0.0.11 ipv6=off;

        live_kmp;
    }

    # closed caption decoder (kmp input)
    server {
        listen 8004;
        resolver 127.0.0.11 ipv6=off;

        kmp_cc;
        kmp_cc_out_ctrl_publish_url ${CONTROLLER_API_URL};
    }

    # rtmp output (kmp input)
    server {
        listen 8005;
        resolver 8.8.8.8;

        kmp_rtmp;
    }
}

http {
    resolver 127.0.0.11 ipv6=off;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
              '$status $bytes_sent $request_time "$http_referer" '
              '"$http_user_agent" "$http_host" $request_length '
              '$pid $connection';

    access_log /dev/stdout main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 60;
    keepalive_requests 1000;
    client_header_timeout 20;
    client_body_timeout 20;
    reset_timedout_connection on;
    send_timeout 20;

    map $uri $channel_id {
        ~/ch/(?P<result>[^/]+) $result;
        default '';
    }

    map $uri $timeline_id {
        ~/tl/(?P<result>[^/]+) $result;
        default 'main';
    }

    # external http server (packager)
    server {
        listen       9090;
        server_name  _;
        resolver 127.0.0.11 ipv6=off;

        gzip on;
        gzip_types application/vnd.apple.mpegurl video/f4m application/dash+xml text/xml text/vtt;
        gzip_proxied any;

        add_header Access-Control-Allow-Headers 'Origin,Range,Accept-Encoding,Referer,Cache-Control';
        add_header Access-Control-Expose-Headers 'Server,Content-Length,Content-Range,Date,Age';
        add_header Access-Control-Allow-Methods 'GET,HEAD,OPTIONS';
        add_header Access-Control-Allow-Origin '*';

        pckg_uri /ksmp_proxy/;
        pckg_channel_id $channel_id;
        pckg_timeline_id $timeline_id;
        pckg_m3u8_low_latency on;

        location /clear/ {
            pckg;
        }

        location /aes128/ {
            pckg;
            pckg_enc_scheme aes-128;
        }

        location /cbcs/ {
            pckg;
            pckg_enc_scheme cbcs;
        }

        location /ksmp_proxy/ {
            internal;
            proxy_pass http://127.0.0.1:8001/ksmp/;
            subrequest_output_buffer_size 20m;
        }

        location /publish/ {
            client_max_body_size 0;

            ts;
            ts_stream_id $arg_streamid;

            ts_kmp on;
            ts_kmp_ctrl_connect_url ${CONTROLLER_API_URL};
            ts_kmp_ctrl_publish_url ${CONTROLLER_API_URL};
            ts_kmp_ctrl_unpublish_url ${CONTROLLER_API_URL};
            ts_kmp_ctrl_republish_url ${CONTROLLER_API_URL};
        }
    }

    # internal http server
    server {
        resolver 127.0.0.11 ipv6=off;
        listen  8001;

        #allow 127.0.0.1/32;
        #deny all;

        client_body_buffer_size 64k;

        # segmenter (ksmp output)
        location /ksmp/ {
            live_ksmp;
        }

        # api endpoints
        location /api/live/ {
            live_api write=on upsert=on;
        }

        location /api/kmp_out/ {
            kmp_out_api write=on;
        }

        location /api/kmp_cc/ {
            kmp_cc_api write=on;
        }

        location /api/kmp_rtmp/ {
            kmp_rtmp_api write=on;
        }

        location /api/rtmp_kmp/ {
            rtmp_kmp_api write=on;
        }

        location /api/ts_kmp/ {
            ts_kmp_api write=on;
        }

        # s3 stub
        location /store/ {
            root /tmp/;
            dav_methods PUT;
            create_full_put_path on;
            client_max_body_size 100m;
        }
    }
}
